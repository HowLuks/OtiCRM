'use server';
/**
 * @fileOverview AI-powered message personalization flow.
 *
 * - personalizeMessage - A function that personalizes a message template for a specific prospect.
 * - PersonalizeMessageInput - The input type for the personalizeMessage function.
 * - PersonalizeMessageOutput - The return type for the personalizeMessage function.
 */

import { ai } from '@/ai/genkit';
import { z } from 'genkit';

const PersonalizeMessageInputSchema = z.object({
  messageTemplate: z.string().describe('The base message template to be personalized. It may contain placeholders like [Nome] or [Empresa].'),
  prospectData: z.string().describe('A string containing key information about the prospect, such as name, company, and sales funnel status.'),
});
export type PersonalizeMessageInput = z.infer<typeof PersonalizeMessageInputSchema>;

const PersonalizeMessageOutputSchema = z.object({
  personalizedMessage: z.string().describe('The personalized message generated by the AI.'),
});
export type PersonalizeMessageOutput = z.infer<typeof PersonalizeMessageOutputSchema>;

export async function personalizeMessage(input: PersonalizeMessageInput): Promise<PersonalizeMessageOutput> {
  return personalizeMessageFlow(input);
}

const personalizeMessagePrompt = ai.definePrompt({
  name: 'personalizeMessagePrompt',
  input: { schema: PersonalizeMessageInputSchema },
  output: { schema: PersonalizeMessageOutputSchema },
  prompt: `You are a helpful sales assistant. Your task is to personalize a message template for a specific prospect.

  Use the prospect's data to replace any placeholders (like [Nome] or [Empresa]) in the message template.
  Adapt the tone slightly if possible based on the prospect's data, but stick to the core message.

  Prospect Data:
  ---
  {{{prospectData}}}
  ---

  Message Template:
  ---
  {{{messageTemplate}}}
  ---

  Generate the final, personalized message. Only output the final message content.
  `,
});


const personalizeMessageFlow = ai.defineFlow(
  {
    name: 'personalizeMessageFlow',
    inputSchema: PersonalizeMessageInputSchema,
    outputSchema: PersonalizeMessageOutputSchema,
  },
  async (input) => {
    const { output } = await personalizeMessagePrompt(input);
    return output!;
  }
);
